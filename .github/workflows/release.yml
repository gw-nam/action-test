name: Build and Upload JAR to GitHub Releases

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/QA-')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    
    defaults:
      run:
        working-directory: source/test-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Test
        run: ./gradlew test
      - name: Build JAR
        run: |
          ./gradlew bootjar
          echo "JAR file generated at:"
          find ./build/libs -name "*.jar"     

      - name: Set release title
        id: set_release_title
        run: |
          # 'release/QA-'
          release_tag=${GITHUB_HEAD_REF#release/QA-}
          echo "Release tag: $release_tag"
          echo "::set-output name=release_tag::$release_tag"

      - name: Get commit messages
        id: get_commit_messages
        run: |
          # main
          commits=$(git log ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} --pretty=format:"* %s")
          echo "$commits" > commit_messages.txt
          echo "::set-output name=commits::$commits"
          
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ steps.set_release_title.outputs.release_tag }}
          release_name: ${{ steps.set_release_title.outputs.release_tag }}
          body: |
            ## Changes:
            ${{ steps.get_commit_messages.outputs.commits }}

      - name: Upload JAR from did-datamodel-sdk-aos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source/test-server/build/libs/*.jar
          asset_name: test-${{ steps.create_release.outputs.tag_name }}.jar
          asset_content_type: application/java-archive
